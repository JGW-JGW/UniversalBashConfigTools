#!/bin/bash
# 去掉字符串两端的空格
function init_strip() {
  echo "$*" | sed -r 's/^[[:space:]]+//' | sed -r 's/[[:space:]]+$//'
  return 0
}

# 获取配置文件中的值
function init_get_conf() {
  local var="$1"
  local file="$2"
  local line

  line=$(grep -E "^[[:space:]]*${var}([[:space:]]+|[[:space:]]*=)" "${file}" | tail -1)

  if [[ ${line} =~ '=' ]]; then
    eval echo "$(std_strip "$(echo "${line}" | awk -F= '{print $2}')")"
  else
    eval echo "$(std_strip "$(echo "${line}" | awk '{print $2}')")"
  fi
}

# 字符串标准化：将字符串中的 '.' 替换为 '_'
function init_standardize() {
  echo "$*" | sed -r 's/\./_/g'
  return 0
}

init_standardize V7.9.2009


# UBCT 相关信息
UBCT_STD=${UBCT_DIR}/std
UBCT_CONF=${UBCT_DIR}/ubct.conf
UBCT_CONFIG_DIR=${UBCT_DIR}/config

# OS 相关信息
MANUFACTURER=$(init_strip "$(dmidecode -t1 | grep "Manufacturer:" | awk -F: '{print $2}')")
PRODUCT_NAME=$(init_strip "$(dmidecode -t1 | grep "Product Name:" | awk -F: '{print $2}')")
CPU_NUM=$(init_strip"$(lscpu | grep -E "^CPU\(s\):" | awk -F: '{print $2}')")
CPU_TYPE=$(uname -m)
MEM_SIZE_KB=$(grep "MemTotal:" /proc/meminfo | grep -Eo "[0-9]+")
MEM_SIZE_GB=$(echo "scale=2; ${MEM_SIZE_KB} / 1048576" | bc)
OS_ID=$(init_get_conf "ID" /etc/os-release)
OS_VERSION_ID=$(init_get_conf "VERSION_ID" /etc/os-release)
OS_FULL_NAME=${OS_ID}-${OS_VERSION_ID}
OS_STANDARD_NAME=$(init_standardize "${OS_ID}")_$(init_standardize "${OS_VERSION_ID}")