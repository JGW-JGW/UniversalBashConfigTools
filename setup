#!/bin/bash
# shellcheck source=./std
. "$(dirname "$0")/std"

while true; do
  cat <<'EOF'

===========================================
        Universal Bash Config Tools
===========================================
    1. Download from GitHub and Install
    2. Install from Local Disk
    0. Cancel and Exit
===========================================
EOF

  read -rp "Please input your choice: " choice

  echo "==========================================="

  case ${choice} in
  1) # 从 GitHub 上下载 zip 包并安装
    # 检查命令是否存在
    for command in wget unzip; do
      if ! type "${command}" 1>/dev/null 2>/dev/null; then
        echo -e "ERROR: command \"${command}\" not found"
        exit 255
      fi
    done

    # 输入安装路径
    read -rp "Please input absolute path of the directory to be installed in (by default is current directory): " install_dir

    if [[ -n "${install_dir}" ]]; then
      if [[ -e "${install_dir}" && ! -d "${install_dir}" ]]; then
        echo -e "ERROR: \"${install_dir}\" is not a directory"
        exit 255
      fi
      mkdir -p "${install_dir}"
    else
      install_dir="$(pwd)"
    fi

    destiny_url="https://github.com/JGW-JGW/UniversalBashConfigTools/archive/refs/heads/master.zip"

    wget --no-cookies --preserve-permissions --no-check-certificate -N -P "${install_dir}" "${destiny_url}"

    zip_name="$(basename ${destiny_url})"

    unzip -o "${install_dir}/${zip_name}" -d "${install_dir}"

    rm -f "${install_dir}/${zip_name}"

    dir_name="UniversalBashConfigTools-master"

    mv "${install_dir}"/${dir_name}/* "${install_dir}"

    rmdir "${install_dir}/${dir_name}"

    ubct_cmd=/usr/bin/ubct
    ubct_completion=/etc/bash_completion.d/ubct-completion.sh
    ubct_conf=/etc/ubct.conf

    for link in ${ubct_cmd} ${ubct_completion} ${ubct_conf}; do
      [[ -f ${link} ]] && rm -f ${link}
      ln -s "${install_dir}/$(basename ${link})" ${link}
    done

    . ${ubct_completion}
    ;;
  2) # 指定本地磁盘中的介质并安装

    ;;

  0)
    exit
    ;;
  *)
    echo "Please input a valid number!"
    ;;
  esac
done
